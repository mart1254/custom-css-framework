@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");
* {
  font-family: "Roboto", sans-serif;
  font-size: 100%;
}

h1 {

  font-size: 1.5rem;

  font-size: 20px;

  font-weight: 700;
}

h2 {

  font-size: 1rem;

  font-size: 16px;

  font-weight: 700;
}

h3 {

  font-size: 0.8rem;
  font-weight: 700;
  margin-bottom: 0.8rem;
}

ol, ul {
  font-size: 1rem;
  font-weight: 400;
  margin-bottom: 1rem;

  font-size: 12px;
  font-weight: 700;
  margin-bottom: 12px;
}

ol, ul {
  font-size: 16px;
  font-weight: 400;
  margin-bottom: 16px;

}

a {
  text-decoration: none;
  color: blue;
}

ul {
  list-style-type: disc;
}

ol {
  list-style-type: decimal;
}




.btn {
  border-radius: 0.35rem;
  cursor: pointer;
  display: inline-block;
  font-weight: 400;
  line-height: 1.5;
  margin: 0.25rem 0.125rem;
  padding: 0.375rem 0.75rem;
  text-decoration: none;
  color: #BB4430;
  background-color: #F3DFA2;
}
.btndisabled {
  cursor: not-allowed;
  opacity: 0.65;
  pointer-events: all !important;
}



.text-center {
  text-align: center;
}

.container {
  width: 100%;

  padding-left: 15px;
  padding-right: 15px;


  padding-left: 10px;
  padding-right: 10px;

  padding-left: 15px;
  padding-right: 15px;


  margin-left: auto;
  margin-right: auto;
}

@media (min-width: 576px) {

  .container {


  .container-xsm {

  .container {


    max-width: 540px;
  }
}
@media (min-width: 768px) {

  .container {


  .container-sm {

  .container {


    max-width: 720px;
  }
}
@media (min-width: 992px) {

  .container {


  .container-md {

  .container {


    max-width: 960px;
  }
}
@media (min-width: 1200px) {


  .container-lg {
    max-width: 1140px;
  }
}
.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
}

.col {
  padding-left: 10px;
  padding-right: 10px;
}

@media (min-width: 576px) {
  .col-sm {
    flex: 0 0 50%;
    max-width: 50%;
  }
}
@media (min-width: 768px) {
  .co-md {
    flex: 0 0 40%;
    max-width: 40%;
  }
}
@media (min-width: 992px) {
  .co-lg {
    flex: 0 0 30%;
    max-width: 30%;
  }
}


  .container {
    max-width: 1140px;
  }
}



*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Fix mobile Safari increase font-size on landscape mode */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu, summary {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input, textarea {
  --webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
  all: revert;
  box-sizing: border-box;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable=false])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  --webkit-line-break: after-white-space;
  --webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable=true]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
  box-sizing: border-box;
}

/* Remove details summary webkit styles */
::-webkit-details-marker {
  display: none;
}

/*# sourceMappingURL=main.css.map */
